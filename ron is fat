import pytube
import os
import cv2
import PIL.Image
import winsound
from moviepy.editor import *
from pydub import AudioSegment
import threading
frames = []

num = 0

name_file = ("f")


url = input ("Enter the you youtube url")

youtube = pytube.YouTube(url)

streams = youtube.streams.all()

video = youtube.streams.get_highest_resolution()
video.download("C:/Users/sam/Desktop/python/Ascii")
print ("Done!")




###########

#locates all the files with the file exte

for root, dirs, files in os.walk("C:/Users/sam/Desktop/python/Ascii"):

    for file in files:
        if file.endswith(".mp4"):
            file_name = (file)
            file_path = (os.path.join(root,file))
            print (file_name)
            print (file_path)


###########

# Opens the Video file
cap= cv2.VideoCapture(file_path)
try:
    if not os.path.exists('data'):
        os.makedirs('data')
except OSError:
    print ('Error: Creating directory of data')
i=0
while(cap.isOpened()):
    ret, frame = cap.read()
  
    if ret == False:
        break
    cv2.imwrite('./data/f'+str(i)+'.png',frame)
    i+=1
 
cap.release()
cv2.destroyAllWindows()

###########

#locates all the images with the .png extention
for root, dirs, files in os.walk("C:/Users/sam/Desktop/python/data"):

       for file in files:
           if file.endswith(".png"):
               frame_name = (file)
               print (frame_name)
               frames.append(frame_name)
               

frames.sort()              
print (frames)

 
###########
num=0
while True:
    new_width = 100
        
    path = ("C:/Users/sam/Desktop/python/data\\f"+str(num)+".png")
    image = PIL.Image.open(path)
    print ("Path located")

    
    
    ASCII_CHARS = ["@", "#", "S", "%", "?", "*", "+", ";", ":", ",", ".",'a', 'A', 'b', 'B', 'c', 'C', 'd', 'D', 'e', 'E', 'f', 'F', 'g', 'G', 'h', 'H', 'i', 'I', 'j', 'J', 'k', 'K', 'l', 'L', 'm', 'M', 'n', 'N', 'o', 'O', 'p', 'P', 'q', 'Q', 'r', 'R', 's', 'S', 't', 't', 'T', 'u', 'U', 'v', 'V', 'w', 'W', 'x', 'X', 'y', 'Y', 'z', 'Z', '1', '2', '3' , '4', '5', '6', '7', '8', '9',]

    # resize image according to a new width
    def resize_image(image, new_width=100):
        width, height = image.size
        ratio = height/width
        new_height = int(new_width * ratio)
        resized_image = image.resize((new_width, new_height))
        return(resized_image)

    # convert each pixel to grayscale
    def grayify(image):
        grayscale_image = image.convert("L")
        return(grayscale_image)
        
    # convert pixels to a string of ascii characters
    def pixels_to_ascii(image):
        pixels = image.getdata()
        characters = "".join([ASCII_CHARS[pixel//25] for pixel in pixels])
        return(characters)    

    def main(new_width=100):
        # attempt to open image from user-input
        
        try:
            image = PIL.Image.open(path)
        except:
            print(path, " is not a valid pathname to an image.")
            return
    
        # convert image to ascii    
        new_image_data = pixels_to_ascii(grayify(resize_image(image)))
        
        # format
        pixel_count = len(new_image_data)  
        ascii_image = "\n".join([new_image_data[index:(index+new_width)] for index in range(0, pixel_count, new_width)])
        
        
        
        # save result to "ascii_image.txt"
        with open(path+str(num)+".txt","w") as f:
            f.write(ascii_image)
        
    num = num+1
#    run program

    if num == len(frames):

        break




    main()

mp3_file = ("C:/Users/sam/Desktop/python/Ascii/audio.mp3")
mp4_file = ("C:/Users/sam/Desktop/python/Ascii/"+file_name)

VideoClip = VideoFileClip(mp4_file)
audioclip = VideoClip.audio
audioclip.write_audiofile(mp3_file)

audioclip.close()

VideoClip.close()

sound = AudioSegment.from_mp3("C:/Users/sam/Desktop/python/Ascii/audio.mp3")

sound.export("C:/Users/sam/Desktop/python/Ascii/audio.wav", format = "wav")

ascii_list = []


for root, dirs, files in os.walk("C:/Users/sam/Desktop/python/data"):

       for file in files:
           if file.endswith(".txt"):
               ascii_name = (file)
               print (ascii_name)
               ascii_list.append(ascii_name)

num = 1
for x in range ( int (len (ascii_list))):

    try:    
        ascii_list.pop(num)

    except:

        print ("FAT")


    num = num+ 2


print (ascii_list)

ascii_list = sorted(ascii_list, key=lambda x: int("".join([i for i in x if i.isdigit()])))

print (ascii_list)
             
             
import sys            
def a():
    
    filenames = ascii_list
    frames = []

    for name in filenames:
        with open("C:/Users/sam/Desktop/python/data/"+name,"r", encoding="utf8") as f:
            frames.append(f.readlines())


    os.system("MODE CON:COLS=80 LINES=25")
   
    for frame in frames:
        sys.stdout.write("".join(frame))
            
        os.system("CLS")


def b():
    
    winsound.PlaySound("C:/Users/sam/Desktop/python/Ascii/audio.wav",winsound.SND_FILENAME)

threading.Thread(target=a).start()

threading.Thread(target=b).start()
