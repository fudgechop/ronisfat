import pytube
import os
import cv2
import PIL.Image
import winsound
from moviepy.editor import *
from pydub import AudioSegment
import threading



##################################################

num = 0

name_file = ("f")


url = input ("Enter the you youtube url")

youtube = pytube.YouTube(url)

streams = youtube.streams.all()

video = youtube.streams.get_highest_resolution()
video.download("C:/Users/sam/Desktop/python/Ascii")
print ("Done!")




##################################################



#locates all the files with the file exte

for root, dirs, files in os.walk("C:/Users/sam/Desktop/python/Ascii"):

    for file in files:
        if file.endswith(".mp4"):
            file_name = (file)
            file_path = (os.path.join(root,file))
            
            
            print (file_name)
            print (file_path)


##################################################




mp3_file = ("C:/Users/sam/Desktop/python/Ascii/audio.mp3")
mp4_file = ("C:/Users/sam/Desktop/python/Ascii/"+file_name)

VideoClip = VideoFileClip(mp4_file)
audioclip = VideoClip.audio
audioclip.write_audiofile(mp3_file)

audioclip.close()

VideoClip.close()

sound = AudioSegment.from_mp3("C:/Users/sam/Desktop/python/Ascii/audio.mp3")

sound.export("C:/Users/sam/Desktop/python/Ascii/audio.wav", format = "wav")



##################################################


def a():

    # Ascii characters used to create the output 
    ASCII_CHARS = ["@", "#", "S", "%", "?", "*", "+", ";", ":", ",", "."]

    def resized_gray_image(image ,new_width=100):
        width,height = image.size
        aspect_ratio = height/width
        new_height = int(aspect_ratio * new_width)
        resized_gray_image = image.resize((new_width,new_height)).convert('L')
        return resized_gray_image

    def pix2chars(image):
        pixels = image.getdata()
        characters = "".join([ASCII_CHARS[pixel//25] for pixel in pixels])
        return characters

    def generate_frame(image,new_width=100):
        new_image_data = pix2chars(resized_gray_image(image))

        total_pixels = len(new_image_data)

        ascii_image = "\n".join([new_image_data[index:(index+new_width)] for index in range(0, total_pixels, new_width)])

        sys.stdout.write(ascii_image)
        os.system('cls' if os.name == 'nt' else 'clear')




    cap = cv2.VideoCapture(mp4_file)
    print (cap)
    while True:

        ret,frame = cap.read()
        cv2.imshow("frame",frame)
        generate_frame(PIL.Image.fromarray(frame))
        cv2.waitKey(15)

def b():
    
    winsound.PlaySound("C:/Users/sam/Desktop/python/Ascii/audio.wav",winsound.SND_FILENAME)

threading.Thread(target=a).start()

threading.Thread(target=b).start()
    
